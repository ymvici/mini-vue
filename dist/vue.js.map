{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/gloablAPI.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const strats = {};\nconst LIFECYCLE = [\n    'beforeCreate',\n    'created'\n]\nLIFECYCLE.forEach(hook => {\n    strats[hook] = function (p, c) {\n        //  {} {created:function(){}}   => {created:[fn]}\n        // {created:[fn]}  {created:function(){}} => {created:[fn,fn]}\n        if (c) { // 如果儿子有 父亲有   让父亲和儿子拼在一起\n            if (p) {\n                return p.concat(c);\n            } else {\n                return [c]; // 儿子有父亲没有 ，则将儿子包装成数组\n            }\n        } else {\n            return p; // 如果儿子没有则用父亲即可\n        }\n    }\n})\n\n \n\nexport function mergeOptions(parent, child) {\n    const options = {};\n    for (let key in parent) { // 循环老的  {}\n        mergeField(key);\n    }\n    for (let key in child) { // 循环老的   {a:1}\n        if (!parent.hasOwnProperty(key)) {\n            mergeField(key);\n        }\n    }\n    function mergeField(key) {\n        // 策略模式 用策略模式减少if /else\n        if (strats[key]) {\n            options[key] = strats[key](parent[key], child[key])\n        } else {\n            // 如果不在策略中则以儿子为主\n            options[key] = child[key] || parent[key]; // 优先采用儿子，在采用父亲\n        }\n    }\n    return options;\n\n}","\nimport {mergeOptions} from './utils'\n\n\n\n\n\nexport function initGlobalAPI(Vue) {\n    // 静态方法\n   \n    Vue.options = {}\n    Vue.mixin = function (mixin) {\n        // 我们期望将用户的选项和 全局的options进行合并 '\n        this.options = mergeOptions(this.options, mixin);\n        return this;\n    }\n\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\n\n\n// vue3 采用的不是使用正则\n// 对模板进行编译处理  \n\n\nexport function parseHTML(html) { // html最开始肯定是一个  </div>\n\n    const ELEMENT_TYPE = 1;\n    const TEXT_TYPE = 3;\n    const stack = []; // 用于存放元素的\n    let currentParent; // 指向的是栈中的最后一个\n    let root;\n\n    // 最终需要转化成一颗抽象语法树\n    function createASTElement(tag, attrs) {\n        return {\n            tag,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n    // 利用栈型结构 来构造一颗树\n    function start(tag, attrs) {\n        let node =  createASTElement(tag,attrs); // 创造一个ast节点\n        if(!root){ // 看一下是否是空树\n            root = node; // 如果为空则当前是树的根节点\n        } \n        if(currentParent){\n            node.parent = currentParent; // 只赋予了parent属性\n            currentParent.children.push(node); // 还需要让父亲记住自己\n        }\n        stack.push(node);\n        currentParent = node; // currentParent为栈中的最后一个\n    }\n    function chars(text) { // 文本直接放到当前指向的节点中\n        text = text.replace(/\\s/g,' '); // 如果空格超过2就删除2个以上的\n        text && currentParent.children.push({\n            type:TEXT_TYPE,\n            text,\n            parent:currentParent\n        });\n    }\n    function end(tag) {\n       let node =  stack.pop();  // 弹出最后一个, 校验标签是否合法\n       currentParent = stack[stack.length - 1];\n    }\n    function advance(n) {\n        html = html.substring(n);\n    }\n    function parseStartTag() {\n        const start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1], // 标签名\n                attrs: []\n            }\n            advance(start[0].length);\n            // 如果不是开始标签的结束 就一直匹配下去\n            let attr, end\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                advance(attr[0].length);\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\n            }\n            if (end) {\n                advance(end[0].length)\n            }\n            return match;\n        }\n        return false; // 不是开始标签\n    }\n    while (html) {\n        // 如果textEnd 为0 说明是一个开始标签或者结束标签\n        // 如果textEnd > 0说明就是文本的结束位置\n        let textEnd = html.indexOf('<');  // 如果indexOf中的索引是0 则说明是个标签\n        if (textEnd == 0) {\n            const startTagMatch = parseStartTag(); // 开始标签的匹配结果\n            if (startTagMatch) { // 解析到的开始标签\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue\n            }\n            let endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1])\n                continue;\n            }\n        }\n        if (textEnd > 0) {\n            let text = html.substring(0, textEnd); // 文本内容\n            if (text) {\n                chars(text)\n                advance(text.length); // 解析到的文本 \n            }\n        }\n    }\n    \n\n    return root;\n}","import { parseHTML } from \"./parse\";\n\nfunction genProps(attrs) {\n    let str = ''// {name,value}\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        if (attr.name === 'style') {\n            // color:red;background:red => {color:'red'}\n            let obj = {};\n            attr.value.split(';').forEach(item => { // qs 库\n                let [key, value] = item.split(':');\n                obj[key] = value;\n            });\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},` // a:b,c:d,\n    }\n    return `{${str.slice(0, -1)}}`\n}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\nfunction gen(node) {\n    if (node.type === 1) {\n        return codegen(node);\n    } else {\n        // 文本\n        let text = node.text\n        if (!defaultTagRE.test(text)) {\n            return `_v(${JSON.stringify(text)})`\n        } else {\n            //_v( _s(name)+'hello' + _s(name))\n            let tokens = [];\n            let match;\n            defaultTagRE.lastIndex = 0;\n            let lastIndex = 0;\n            // split\n            while (match = defaultTagRE.exec(text)) {\n                let index = match.index; // 匹配的位置  {{name}} hello  {{name}} hello \n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                }\n                tokens.push(`_s(${match[1].trim()})`)\n                lastIndex = index + match[0].length\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n            return `_v(${tokens.join('+')})`\n        }\n    }\n}\nfunction genChildren(children) {\n    return children.map(child => gen(child)).join(',')\n}\nfunction codegen(ast) {\n    let children = genChildren(ast.children);\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\n        }${ast.children.length ? `,${children}` : ''\n        })`)\n\n    return code;\n}\nexport function compileToFunction(template) {\n\n    // 1.就是将template 转化成ast语法树\n    let ast = parseHTML(template);\n\n    // 2.生成render方法 (render方法执行后的返回的结果就是 虚拟DOM)\n\n    // 模板引擎的实现原理 就是 with  + new Function\n\n    let code = codegen(ast);\n    code = `with(this){return ${code}}`;\n    let render = new Function(code); // 根据代码生成render函数\n\n    //  _c('div',{id:'app'},_c('div',{style:{color:'red'}},  _v(_s(vm.name)+'hello'),_c('span',undefined,  _v(_s(age))))\n\n    return render;\n}\n\n\n// <xxx\n// <namepsace:xxx\n// color   =   \"asdsada\"     c= 'asdasd'  d=  asdasdsa","\nlet id = 0;\nclass Dep{\n    constructor(){\n        this.id = id++; // 属性的dep要收集watcher\n        this.subs = [];// 这里存放着当前属性对应的watcher有哪些\n    }\n    depend(){\n        // 这里我们不希望放重复的watcher，而且刚才只是一个单向的关系 dep -> watcher\n        // watcher 记录dep\n        // this.subs.push(Dep.target);\n\n        Dep.target.addDep(this); // 让watcher记住dep\n\n        // dep 和 watcher是一个多对多的关系 （一个属性可以在多个组件中使用 dep -> 多个watcher）\n        // 一个组件中由多个属性组成 （一个watcher 对应多个dep）\n    }\n    addSub(watcher){\n        this.subs.push(watcher)\n    }\n    notify(){\n        this.subs.forEach(watcher=>watcher.update()); // 告诉watcher要更新了\n    }\n}\nDep.target = null;\n\nexport default Dep;\n","import Dep from \"./dep\";\n\nlet id = 0;\n\n// 1） 当我们创建渲染watcher的时候我们会把当前的渲染watcher放到Dep.target上\n// 2) 调用_render() 会取值 走到get上\n// 每个属性有一个dep （属性就是被观察者） ， watcher就是观察者（属性变化了会通知观察者来更新） -》 观察者模式\nclass Watcher {\n  // 不同组件有不同的watcher\n  constructor(vm, fn, options) {\n    this.id = id++;\n    this.renderWatcher = options; // 是一个渲染watcher\n    this.getter = fn; // getter意味着调用这个函数可以发生取值操作\n    this.deps = []; // 实现计算属性，和一些清理工作需要用到\n    this.depsId = new Set();\n    this.get();\n  }\n  addDep(dep) {\n    // 一个组件 对应着多个属性 重复的属性也不用记录\n    let id = dep.id;\n    if (!this.depsId.has(id)) {\n      this.deps.push(dep);\n      this.depsId.add(id);\n      dep.addSub(this); // watcher已经记住了dep了而且去重了，此时让dep也记住watcher\n    }\n  }\n  get() {\n    Dep.target = this; // 静态属性就是只有一份\n    this.getter(); // 会去vm上取值  vm._update(vm._render)\n    Dep.target = null; // 渲染完毕后就清空\n  }\n  update() {\n    queueWatcher(this); // 把当前的watcher 暂存起来\n    // this.get(); // 重新渲染\n  }\n  run() {\n    this.get(); // 渲染的时候用的是最新的vm来渲染的\n  }\n}\nlet queue = [];\nlet has = {};\nlet pending = false; // 防抖\nfunction flushSchedulerQueue() {\n  let flushQueue = queue.slice(0);\n  queue = [];\n  has = {};\n  pending = false;\n  flushQueue.forEach((q) => q.run()); // 在刷新的过程中可能还有新的watcher，重新放到queue中\n}\nfunction queueWatcher(watcher) {\n  const id = watcher.id;\n  if (!has[id]) {\n    queue.push(watcher);\n    has[id] = true;\n    // 不管我们的update执行多少次 ，但是最终只执行一轮刷新操作\n    if (!pending) {\n      nextTick(flushSchedulerQueue, 0);\n      pending = true;\n    }\n  }\n}\nlet callbacks = [];\nlet waiting = false;\nfunction flushCallbacks() {\n  let cbs = callbacks.slice(0);\n  waiting = false;\n  callbacks = [];\n  cbs.forEach((cb) => cb()); // 按照顺序依次执行\n}\n\n// nextTick 没有直接使用某个api 而是采用优雅降级的方式\n// 内部先采用的是promise （ie不兼容）  MutationObserver(h5的api)  可以考虑ie专享的 setImmediate  setTimeout\n\n// let timerFunc;\n// if (Promise) {\n//     timerFunc = () => {\n//         Promise.resolve().then(flushCallbacks)\n//     }\n// }else if(MutationObserver){\n//     let observer = new MutationObserver(flushCallbacks); // 这里传入的回调是异步执行的\n//     let textNode = document.createTextNode(1);\n//     observer.observe(textNode,{\n//         characterData:true\n//     });\n//     timerFunc = () => {\n//         textNode.textContent = 2;\n//     }\n// }else if(setImmediate){\n//     timerFunc = () => {\n//        setImmediate(flushCallbacks);\n//     }\n// }else{\n//     timerFunc = () => {\n//         setTimeout(flushCallbacks);\n//      }\n// }\nexport function nextTick(cb) {\n  // 先内部还是先用户的？\n  callbacks.push(cb); // 维护nextTick中的cakllback方法\n  if (!waiting) {\n    // timerFunc()\n    Promise.resolve().then(flushCallbacks);\n    waiting = true;\n  }\n}\n\n// 需要给每个属性增加一个dep， 目的就是收集watcher\n\n// 一个组件中 有多少个属性 （n个属性会对应一个视图） n个dep对应一个watcher\n// 1个属性 对应着多个组件  1个dep对应多个watcher\n// 多对多的关系\n\nexport default Watcher;\n","\n// h()  _c()\nexport function createElementVNode(vm, tag, data, ...children) {\n    if (data == null) {\n        data = {}\n    }\n    let key = data.key;\n    if (key) {\n        delete data.key\n    }\n    return vnode(vm, tag, key, data, children);\n}\n// _v();\nexport function createTextVNode(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\n}\n// ast一样吗？ ast做的是语法层面的转化 他描述的是语法本身 (可以描述js css html)\n// 我们的虚拟dom 是描述的dom元素，可以增加一些自定义属性  (描述dom的)\nfunction vnode(vm, tag, key, data, children, text) {\n    return {\n        vm,\n        tag,\n        key,\n        data,\n        children,\n        text\n        // ....\n    }\n}","import Watcher from \"./observe/watcher\";\nimport { createElementVNode, createTextVNode } from \"./vdom\"\n\n\nfunction createElm(vnode){\n    let {tag,data,children,text} = vnode;\n    if(typeof tag === 'string'){ // 标签\n        vnode.el =  document.createElement(tag); // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\n        patchProps(vnode.el,data);\n        children.forEach(child => {\n            vnode.el.appendChild( createElm(child))\n        });\n    }else{\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\nfunction patchProps(el,props){\n    for(let key in props){\n        if(key === 'style'){ // style{color:'red'}\n            for(let styleName in props.style){\n                el.style[styleName] = props.style[styleName];\n            }\n        }else{\n            el.setAttribute(key,props[key]);\n        }\n    }\n}\nfunction patch(oldVNode,vnode){\n    // 写的是初渲染流程 \n    const isRealElement = oldVNode.nodeType;\n    if(isRealElement){\n        const elm = oldVNode; // 获取真实元素\n        const parentElm = elm.parentNode; // 拿到父元素\n        let newElm =  createElm(vnode);\n        parentElm.insertBefore(newElm,elm.nextSibling);\n        parentElm.removeChild(elm); // 删除老节点\n\n        return newElm\n    }else{\n        // diff算法\n    }\n}\n\n\nexport function initLifeCycle(Vue){\n    Vue.prototype._update = function(vnode){ // 将vnode转化成真实dom\n        const vm = this;\n        const el = vm.$el;\n\n        // patch既有初始化的功能  又有更新 \n        vm.$el = patch(el,vnode);\n    }\n\n    // _c('div',{},...children)\n    Vue.prototype._c = function(){\n       return  createElementVNode(this,...arguments)\n    }\n    // _v(text)\n    Vue.prototype._v = function(){\n        return createTextVNode(this,...arguments)\n    }\n    Vue.prototype._s = function(value){\n        if(typeof value !== 'object') return value\n        return JSON.stringify(value)\n    }\n    Vue.prototype._render = function(){\n        // 当渲染的时候会去实例中取值，我们就可以将属性和视图绑定在一起\n        \n        return this.$options.render.call(this); // 通过ast语法转义后生成的render方法\n    }\n}\n\nexport function mountComponent(vm,el){ // 这里的el 是通过querySelector处理过的\n    vm.$el = el;\n\n    // 1.调用render方法产生虚拟节点 虚拟DOM\n\n    const updateComponent = ()=>{\n        vm._update(vm._render()); // vm.$options.render() 虚拟节点\n    }\n    const watcher = new Watcher(vm,updateComponent,true); // true用于标识是一个渲染watcher\n    \n    console.log(watcher);\n\n\n\n\n    // 2.根据虚拟DOM产生真实DOM \n\n    // 3.插入到el元素中\n\n}\n// vue核心流程 1） 创造了响应式数据  2） 模板转换成ast语法树  \n// 3) 将ast语法树转换了render函数 4) 后续每次数据更新可以只执行render函数 (无需再次执行ast转化的过程)\n// render函数会去产生虚拟节点（使用响应式数据）\n// 根据生成的虚拟节点创造真实的DOM\n\n\nexport function callHook(vm,hook){ // 调用钩子函数\n    const handlers = vm.$options[hook];\n    if(handlers){\n        handlers.forEach(handler=>handler.call(vm))\n    }\n}\n","// 我们希望重写数组中的部分方法\nlet oldArrayProto = Array.prototype; // 获取数组的原型\n// newArrayProto.__proto__  = oldArrayProto\nexport let newArrayProto = Object.create(oldArrayProto);\n\nlet methods = [ // 找到所有的变异方法\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'reverse',\n    'sort',\n    'splice'\n] // concat slice 都不会改变原数组\nmethods.forEach(method => {\n    // arr.push(1,2,3)\n    newArrayProto[method] = function (...args) { // 这里重写了数组的方法\n        // push.call(arr)\n        // todo...\n        const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法 ， 函数的劫持  切片编程\n        // 我们需要对新增的 数据再次进行劫持\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift': // arr.unshift(1,2,3)\n                inserted = args;\n                break;\n            case 'splice':  // arr.splice(0,1,{a:1},{a:1})\n                inserted = args.slice(2);\n            default:\n                break;\n        }\n        // console.log(inserted); // 新增的内容\n        if(inserted) {\n            // 对新增的内容再次进行观测  \n            ob.observeArray(inserted);\n        }\n        return result\n    }\n})","import { newArrayProto } from \"./array\";\nimport Dep from \"./dep\";\n\nclass Observer{\n    constructor(data){\n\n        // 给每个对象都增加收集功能 \n        \n        this.dep = new Dep(); // 所有对象都要增加dep\n\n\n        // Object.defineProperty只能劫持已经存在的属性 （vue里面会为此单独写一些api  $set $delete）\n        Object.defineProperty(data,'__ob__',{\n            value:this,\n            enumerable:false // 将__ob__ 变成不可枚举 （循环的时候无法获取到）\n        });\n        // data.__ob__ = this; // 给数据加了一个标识 如果数据上有__ob__ 则说明这个属性被观测过了\n        if(Array.isArray(data)){\n            // 这里我们可以重写数组中的方法 7个变异方法 是可以修改数组本身的\n            data.__proto__ =  newArrayProto  // 需要保留数组原有的特性，并且可以重写部分方法\n            this.observeArray(data); // 如果数组中放的是对象 可以监控到对象的变化\n        }else{\n            this.walk(data);\n        }\n    }\n\n    walk(data){ // 循环对象 对属性依次劫持\n        // \"重新定义\"属性   性能差\n        Object.keys(data).forEach(key=> defineReactive(data,key,data[key]))\n    }\n    observeArray(data){ // 观测数组\n        data.forEach(item=> observe(item))\n    }\n}\n// 深层次嵌套会递归，递归多了性能差，不存在属性监控不到，存在的属性要重写方法  vue3-> proxy\nfunction dependArray(value){\n    for(let i = 0; i < value.length;i++){\n        let current = value[i]\n        current.__ob__ && current.__ob__.dep.depend();\n        if(Array.isArray(current)){\n            dependArray(current);\n        }\n    }\n}\n\nexport function defineReactive(target,key,value){ // 闭包  属性劫持\n    let childOb = observe(value); // 对所有的对象都进行属性劫持  childOb.dep 用来收集依赖的\n    let dep = new Dep(); // 每一个属性都有一个dep\n    Object.defineProperty(target,key,{\n        get(){ // 取值的时候 会执行get\n            if(Dep.target){\n                dep.depend(); // 让这个属性的收集器记住当前的watcher\n                if(childOb){\n                    childOb.dep.depend(); // 让数组和对象本身也实现依赖收集\n                    if(Array.isArray(value)){\n                        dependArray(value);\n                    }\n                }\n            }\n            return value\n        },\n        set(newValue){ // 修改的时候 会执行set\n            if(newValue === value) return\n            observe(newValue)\n            value = newValue\n            dep.notify(); // 通知更新\n        }\n    })\n}\nexport function observe(data){\n    // 对这个对象进行劫持\n    if(typeof data !== 'object' || data == null){\n        return; // 只对对象进行劫持\n    }\n    if(data.__ob__ instanceof Observer){ // 说明这个对象被代理过了\n        return data.__ob__;\n    }\n    // 如果一个对象被劫持过了，那就不需要再被劫持了 (要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过)\n\n    return new Observer(data);\n\n}\n","import { observe } from \"./observe/index\";\n\nexport function initState(vm) {\n    const opts = vm.$options; // 获取所有的选项\n    if (opts.data) {\n        initData(vm);\n    }\n}\nfunction proxy(vm, target, key) {\n    Object.defineProperty(vm, key, { // vm.name\n        get() {\n            return vm[target][key]; // vm._data.name\n        },\n        set(newValue){\n            vm[target][key] = newValue\n        }\n    })\n}\nfunction initData(vm) {\n    let data = vm.$options.data; // data可能是函数和对象\n    data = typeof data === 'function' ? data.call(vm) : data; // data是用户返回的对象\n\n    vm._data = data; // 我将返回的对象放到了_data上\n    // 对数据进行劫持 vue2 里采用了一个api defineProperty\n    observe(data)\n\n    // 将vm._data 用vm来代理就可以了 \n    for (let key in data) {\n        proxy(vm, '_data', key);\n    }\n}","import { compileToFunction } from \"./compiler\";\nimport { callHook, mountComponent } from \"./lifecycle\";\nimport { initState } from \"./state\";\nimport { mergeOptions } from \"./utils\";\n\n\nexport function initMixin(Vue) { // 就是给Vue增加init方法的\n    Vue.prototype._init = function (options) { // 用于初始化操作\n        // vue  vm.$options 就是获取用户的配置 \n        // 我们使用的 vue的时候 $nextTick $data $attr.....\n        const vm = this;\n\n        // 我们定义的全局指令和过滤器.... 都会挂载到实力上\n        vm.$options = mergeOptions(this.constructor.options,options); // 将用户的选项挂载到实例上\n\n\n        callHook(vm,'beforeCreate'); // 内部调用的是beforeCreate 写错了就不执行了\n        // 初始化状态\n        initState(vm);\n        callHook(vm,'created');\n\n        if (options.el) {\n            vm.$mount(options.el); // 实现数据的挂载\n        }\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        el = document.querySelector(el);\n        let ops = vm.$options\n        if (!ops.render) { // 先进行查找有没有render函数 \n            let template; // 没有render看一下是否写了tempate, 没写template采用外部的template\n            if (!ops.template && el) { // 没有写模板 但是写了el\n                template = el.outerHTML\n            }else{\n                if(el){\n                    template = ops.template // 如果有el 则采用模板的内容\n                }\n            }\n            // 写了temlate 就用 写了的template\n            if(template && el){\n                // 这里需要对模板进行编译 \n                const render = compileToFunction(template);\n                ops.render = render; // jsx 最终会被编译成h('xxx')\n            }\n        }\n        mountComponent(vm,el); // 组件的挂载  \n         // 最终就可以获取render方法\n        // script 标签引用的vue.global.js 这个编译过程是在浏览器运行的\n        // runtime是不包含模板编译的, 整个编译是打包的时候通过loader来转义.vue文件的, 用runtime的时候不能使用template\n\n    }\n}\n\n","import { initGlobalAPI } from \"./gloablAPI\";\nimport { initMixin } from \"./init\";\nimport { initLifeCycle } from \"./lifecycle\";\nimport { nextTick } from \"./observe/watcher\";\n\n// 将所有的方法都耦合在一起\nfunction Vue(options) { // options就是用户的选项\n    this._init(options); // 默认就调用了init\n}\n\nVue.prototype.$nextTick = nextTick\ninitMixin(Vue); // 扩展了init方法\ninitLifeCycle(Vue);\n\ninitGlobalAPI(Vue)\n\n\n\n\n\n\n\n\n\n\n\nexport default Vue"],"names":["strats","LIFECYCLE","forEach","hook","p","c","concat","mergeOptions","parent","child","options","key","mergeField","hasOwnProperty","initGlobalAPI","Vue","mixin","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","item","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","ast","code","compileToFunction","template","render","Function","id","Dep","subs","target","addDep","watcher","update","Watcher","vm","fn","renderWatcher","getter","deps","depsId","Set","get","dep","has","add","addSub","queueWatcher","queue","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","callbacks","waiting","flushCallbacks","cbs","cb","Promise","resolve","then","createElementVNode","data","vnode","createTextVNode","undefined","createElm","el","document","createElement","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","prototype","_update","$el","_c","arguments","_v","_s","_render","$options","call","mountComponent","updateComponent","console","log","callHook","handlers","handler","oldArrayProto","Array","newArrayProto","Object","create","methods","method","args","result","inserted","ob","__ob__","observeArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","dependArray","current","depend","childOb","set","newValue","notify","initState","opts","initData","proxy","_data","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","$nextTick"],"mappings":"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"}