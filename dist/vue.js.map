{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\n\n\n// vue3 采用的不是使用正则\n// 对模板进行编译处理  \n\n\nexport function parseHTML(html) { // html最开始肯定是一个  </div>\n\n    const ELEMENT_TYPE = 1;\n    const TEXT_TYPE = 3;\n    const stack = []; // 用于存放元素的\n    let currentParent; // 指向的是栈中的最后一个\n    let root;\n\n    // 最终需要转化成一颗抽象语法树\n    function createASTElement(tag, attrs) {\n        return {\n            tag,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n    // 利用栈型结构 来构造一颗树\n    function start(tag, attrs) {\n        let node =  createASTElement(tag,attrs); // 创造一个ast节点\n        if(!root){ // 看一下是否是空树\n            root = node; // 如果为空则当前是树的根节点\n        } \n        if(currentParent){\n            node.parent = currentParent; // 只赋予了parent属性\n            currentParent.children.push(node); // 还需要让父亲记住自己\n        }\n        stack.push(node);\n        currentParent = node; // currentParent为栈中的最后一个\n    }\n    function chars(text) { // 文本直接放到当前指向的节点中\n        text = text.replace(/\\s/g,' '); // 如果空格超过2就删除2个以上的\n        text && currentParent.children.push({\n            type:TEXT_TYPE,\n            text,\n            parent:currentParent\n        });\n    }\n    function end(tag) {\n       let node =  stack.pop();  // 弹出最后一个, 校验标签是否合法\n       currentParent = stack[stack.length - 1];\n    }\n    function advance(n) {\n        html = html.substring(n);\n    }\n    function parseStartTag() {\n        const start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1], // 标签名\n                attrs: []\n            }\n            advance(start[0].length);\n            // 如果不是开始标签的结束 就一直匹配下去\n            let attr, end\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                advance(attr[0].length);\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\n            }\n            if (end) {\n                advance(end[0].length)\n            }\n            return match;\n        }\n        return false; // 不是开始标签\n    }\n    while (html) {\n        // 如果textEnd 为0 说明是一个开始标签或者结束标签\n        // 如果textEnd > 0说明就是文本的结束位置\n        let textEnd = html.indexOf('<');  // 如果indexOf中的索引是0 则说明是个标签\n        if (textEnd == 0) {\n            const startTagMatch = parseStartTag(); // 开始标签的匹配结果\n            if (startTagMatch) { // 解析到的开始标签\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue\n            }\n            let endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1])\n                continue;\n            }\n        }\n        if (textEnd > 0) {\n            let text = html.substring(0, textEnd); // 文本内容\n            if (text) {\n                chars(text)\n                advance(text.length); // 解析到的文本 \n            }\n        }\n    }\n    \n\n    return root;\n}","import { parseHTML } from \"./parse\";\n\nfunction genProps(attrs) {\n    let str = ''// {name,value}\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        if (attr.name === 'style') {\n            // color:red;background:red => {color:'red'}\n            let obj = {};\n            attr.value.split(';').forEach(item => { // qs 库\n                let [key, value] = item.split(':');\n                obj[key] = value;\n            });\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},` // a:b,c:d,\n    }\n    return `{${str.slice(0, -1)}}`\n}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\nfunction gen(node) {\n    if (node.type === 1) {\n        return codegen(node);\n    } else {\n        // 文本\n        let text = node.text\n        if (!defaultTagRE.test(text)) {\n            return `_v(${JSON.stringify(text)})`\n        } else {\n            //_v( _s(name)+'hello' + _s(name))\n            let tokens = [];\n            let match;\n            defaultTagRE.lastIndex = 0;\n            let lastIndex = 0;\n            // split\n            while (match = defaultTagRE.exec(text)) {\n                let index = match.index; // 匹配的位置  {{name}} hello  {{name}} hello \n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                }\n                tokens.push(`_s(${match[1].trim()})`)\n                lastIndex = index + match[0].length\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n            return `_v(${tokens.join('+')})`\n        }\n    }\n}\nfunction genChildren(children) {\n    return children.map(child => gen(child)).join(',')\n}\nfunction codegen(ast) {\n    let children = genChildren(ast.children);\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\n        }${ast.children.length ? `,${children}` : ''\n        })`)\n\n    return code;\n}\nexport function compileToFunction(template) {\n\n    // 1.就是将template 转化成ast语法树\n    let ast = parseHTML(template);\n\n    // 2.生成render方法 (render方法执行后的返回的结果就是 虚拟DOM)\n\n    // 模板引擎的实现原理 就是 with  + new Function\n\n    let code = codegen(ast);\n    code = `with(this){return ${code}}`;\n    let render = new Function(code); // 根据代码生成render函数\n\n    //  _c('div',{id:'app'},_c('div',{style:{color:'red'}},  _v(_s(vm.name)+'hello'),_c('span',undefined,  _v(_s(age))))\n\n    return render;\n}\n\n\n// <xxx\n// <namepsace:xxx\n// color   =   \"asdsada\"     c= 'asdasd'  d=  asdasdsa","\n// h()  _c()\nexport function createElementVNode(vm, tag, data, ...children) {\n    if (data == null) {\n        data = {}\n    }\n    let key = data.key;\n    if (key) {\n        delete data.key\n    }\n    return vnode(vm, tag, key, data, children);\n}\n// _v();\nexport function createTextVNode(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\n}\n// ast一样吗？ ast做的是语法层面的转化 他描述的是语法本身 (可以描述js css html)\n// 我们的虚拟dom 是描述的dom元素，可以增加一些自定义属性  (描述dom的)\nfunction vnode(vm, tag, key, data, children, text) {\n    return {\n        vm,\n        tag,\n        key,\n        data,\n        children,\n        text\n        // ....\n    }\n}","import { createElementVNode, createTextVNode } from \"./vdom/index\";\n\nfunction createElm(vnode) {\n  let { tag, data, children, text } = vnode;\n  if (typeof tag === \"string\") {\n    // 标签\n    vnode.el = document.createElement(tag); // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\n    patchProps(vnode.el, data);\n    children.forEach((child) => {\n      vnode.el.appendChild(createElm(child));\n    });\n  } else {\n    vnode.el = document.createTextNode(text);\n  }\n  return vnode.el;\n}\nfunction patchProps(el, props) {\n  for (let key in props) {\n    if (key === \"style\") {\n      // style{color:'red'}\n      for (let styleName in props.style) {\n        el.style[styleName] = props.style[styleName];\n      }\n    } else {\n      el.setAttribute(key, props[key]);\n    }\n  }\n}\nfunction patch(oldVNode, vnode) {\n  // 写的是初渲染流程\n  const isRealElement = oldVNode.nodeType;\n  if (isRealElement) {\n    const elm = oldVNode; // 获取真实元素\n    const parentElm = elm.parentNode; // 拿到父元素\n    let newElm = createElm(vnode);\n    parentElm.insertBefore(newElm, elm.nextSibling);\n    parentElm.removeChild(elm); // 删除老节点\n\n    return newElm;\n  } else {\n    // diff算法\n  }\n}\n\nexport function initLifeCycle(Vue) {\n  Vue.prototype._update = function (vnode) {\n    // 将vnode转化成真实dom\n    const vm = this;\n    const el = vm.$el;\n\n    // patch既有初始化的功能  又有更新\n    vm.$el = patch(el, vnode);\n  };\n\n  // _c('div',{},...children)\n  Vue.prototype._c = function () {\n    return createElementVNode(this, ...arguments);\n  };\n  // _v(text)\n  Vue.prototype._v = function () {\n    return createTextVNode(this, ...arguments);\n  };\n  Vue.prototype._s = function (value) {\n    if (typeof value !== \"object\") return value;\n    return JSON.stringify(value);\n  };\n  Vue.prototype._render = function () {\n    // 当渲染的时候会去实例中取值，我们就可以将属性和视图绑定在一起\n\n    return this.$options.render.call(this); // 通过ast语法转义后生成的render方法\n  };\n}\n\nexport function mountComponent(vm, el) {\n  // 这里的el 是通过querySelector处理过的\n  vm.$el = el;\n\n  // 1.调用render方法产生虚拟节点 虚拟DOM\n\n  vm._update(vm._render()); // vm.$options.render() 虚拟节点\n\n  // 2.根据虚拟DOM产生真实DOM\n\n  // 3.插入到el元素中\n}\n// vue核心流程 1） 创造了响应式数据  2） 模板转换成ast语法树\n// 3) 将ast语法树转换了render函数 4) 后续每次数据更新可以只执行render函数 (无需再次执行ast转化的过程)\n// render函数会去产生虚拟节点（使用响应式数据）\n// 根据生成的虚拟节点创造真实的DOM\n","// 我们希望重写数组中的部分方法\nlet oldArrayProto = Array.prototype; // 获取数组的原型\n// newArrayProto.__proto__  = oldArrayProto\n// Object.create()方法创建一个新对象，使用现有的对象来提供新创建的对象的__proto__(原型)。\nexport let newArrayProto = Object.create(oldArrayProto);\n\nlet methods = [\n  // 找到所有的变异方法\n  \"push\",\n  \"pop\",\n  \"shift\",\n  \"unshift\",\n  \"reverse\",\n  \"sort\",\n  \"splice\",\n]; // concat slice 都不会改变原数组\nmethods.forEach((method) => {\n  // arr.push(1,2,3)\n  newArrayProto[method] = function (...args) {\n    // 这里重写了数组的方法\n    // push.call(arr)\n    // todo...\n    // this指向调用方法的数组 oldArrayProto[method]相当于直接调用push，需要修改this指向\n    const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法 ， 函数的劫持  切片编程\n    console.log(\"~newArrayProto oldArrayProto[method]\", oldArrayProto[method]);\n    // 我们需要对新增的 数据再次进行劫持\n    let inserted;\n    let ob = this.__ob__;\n    switch (method) {\n      case \"push\":\n      case \"unshift\": // arr.unshift(1,2,3)\n        inserted = args;\n        break;\n      case \"splice\": // arr.splice(0,1,{a:1},{a:1})\n        inserted = args.slice(2);\n      default:\n        break;\n    }\n    // console.log(inserted); // 新增的内容\n    if (inserted) {\n      // 对新增的内容再次进行观测\n      ob.observeArray(inserted);\n    }\n    return result;\n  };\n});\n","import { newArrayProto } from \"./array\";\n\nclass Observer {\n  constructor(data) {\n    // Object.defineProperty只能劫持已经存在的属性 （vue里面会为此单独写一些api  $set $delete）\n    Object.defineProperty(data, \"__ob__\", {\n      // 给劫持的数据添加ob原型，使其他地方可以调用observer上的方法\n      value: this,\n      enumerable: false, // 将__ob__ 变成不可枚举 （循环的时候无法获取到），为了在对象递归的时候不陷入死循环\n    });\n    // data.__ob__ = this; // 给数据加了一个标识 如果数据上有__ob__ 则说明这个属性被观测过了\n    if (Array.isArray(data)) {\n      // 这里我们可以重写数组中的方法 7个变异方法 是可以修改数组本身的\n      // 用于监听七个改变数组的api 需要保留数组原有的特性，并且可以重写部分方法\n      // 修改数组数据的原型\n      data.__proto__ = newArrayProto;\n      this.observeArray(data); // 如果数组中放的是对象 可以监控到对象的变化，不是对象的数据不进行劫持\n    } else {\n      this.walk(data);\n    }\n  }\n  // 3.1 循环对象 对属性依次劫持\n  walk(data) {\n    // \"重新定义\"属性   性能差\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\n  }\n  observeArray(data) {\n    // 观测数组\n    data.forEach((item) => observe(item));\n  }\n}\n// 3.2将属性定义成响应式的\nexport function defineReactive(target, key, value) {\n  // 劫持对象嵌套的对象\n  observe(value);\n  // 对所有的对象都进行属性劫持\n  Object.defineProperty(target, key, {\n    get() {\n      // 取值的时候 会执行get\n      console.log(\"取值key\", key);\n      return value;\n    },\n    set(newValue) {\n      // 修改的时候 会执行set\n      console.log(\"修改key\", newValue);\n      if (newValue === value) return;\n      observe(newValue);\n      value = newValue;\n    },\n  });\n}\nexport function observe(data) {\n  // 1.对这个对象进行劫持\n  if (typeof data !== \"object\" || data == null) {\n    return; // 只对对象进行劫持\n  }\n  // 2 如果一个对象被劫持过了，那就不需要再被劫持了 (要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过)\n  if (data.__ob__ instanceof Observer) {\n    // 说明这个对象被代理过了\n    return data.__ob__;\n  }\n  // 3. 使用实例来劫持对象\n  return new Observer(data);\n}\n","import { observe } from \"./observe/index\";\n\n// 对数据进行劫持\nexport function initState(vm) {\n  const opts = vm.$options; // 获取所有的选项，组件上传入的数据\n  if (opts.data) {\n    initData(vm);\n  }\n}\nfunction proxy(vm, target, key) {\n  // 使用 Object.defineProperty添加方法，当调用到vm.key时，会被转发到vm._data[key]上\n  Object.defineProperty(vm, key, {\n    // 当使用vm.name取值name时，会被代理到vm._data.name上\n    get() {\n      return vm[target][key]; // vm._data.name\n    },\n    set(newValue) {\n      vm[target][key] = newValue;\n    },\n  });\n}\nfunction initData(vm) {\n  let data = vm.$options.data; // data可能是函数和对象，vue3认定data是函数\n  data = typeof data === \"function\" ? data.call(vm) : data; // data是用户返回的对象，为了让this仍然指向vue实例\n  console.log(\"~ data\", data);\n\n  vm._data = data; // 我将返回的对象放到了_data上\n  // 对数据进行劫持 vue2 里采用了一个api\n  observe(data);\n  console.log(\"~observe data\", data);\n\n  // 将vm._data 用vm来代理就可以了\n  for (let key in data) {\n    // 将所有劫持的属性转发到vm上\n    proxy(vm, \"_data\", key);\n  }\n}\n","import { compileToFunction } from \"./compiler/index\";\nimport { mountComponent } from \"./lifecycle\";\nimport { initState } from \"./state\";\n\nexport function initMixin(Vue) {\n  // 就是给Vue增加init方法的\n  Vue.prototype._init = function (options) {\n    // 1.用于初始化操作\n    // vue  vm.$options 就是获取用户的配置\n    // 我们使用的 vue的时候 $nextTick $data $attr..... 以$开头的都是vue的属性\n    const vm = this; //  this指向vue实例\n    console.log(\"~ vm\", vm);\n    vm.$options = options; // 将用户的选项挂载到实例上，使options在其他函数也能使用\n\n    // 2.初始化状态\n    initState(vm);\n\n    if (options.el) {\n      vm.$mount(options.el); // 实现数据的挂载\n    }\n  };\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    el = document.querySelector(el);\n    let ops = vm.$options;\n    // 先进行查找有没有render函数\n    if (!ops.render) {\n      let template;\n      // 没有render看一下是否写了tempate, 没写template采用外部的template\n      if (!ops.template && el) {\n        // 没有写模板 但是写了el\n        template = el.outerHTML;\n      } else {\n        if (el) {\n          template = ops.template; // 如果有el 则采用模板的内容\n        }\n      }\n      // 写了temlate 就用 写了的template\n      if (template && el) {\n        // 这里需要对模板进行编译\n        const render = compileToFunction(template);\n        ops.render = render; // jsx 最终会被编译成h('xxx')\n      }\n    }\n    mountComponent(vm, el); // 组件的挂载\n    // 最终就可以获取render方法\n    // script 标签引用的vue.global.js 这个编译过程是在浏览器运行的\n    // runtime是不包含模板编译的, 整个编译是打包的时候通过loader来转义.vue文件的, 用runtime的时候不能使用template\n  };\n}\n","import { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) {\r\n  // options就是用户的选项\r\n  this._init(options); // 默认就调用了init this指向vue实例\r\n  console.log(\"~ this\", this);\r\n}\r\n\r\ninitMixin(Vue); // 扩展了init方法\r\ninitLifeCycle(Vue);\r\n\r\nexport default Vue;\r\n"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","createElementVNode","vm","data","vnode","createTextVNode","undefined","createElm","el","document","createElement","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","prototype","_update","$el","_c","arguments","_v","_s","_render","$options","call","mountComponent","oldArrayProto","Array","newArrayProto","Object","create","methods","method","args","result","console","log","inserted","ob","__ob__","observeArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","target","get","set","newValue","initState","opts","initData","proxy","_data","initMixin","_init","options","$mount","querySelector","ops","outerHTML"],"mappings":"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"}